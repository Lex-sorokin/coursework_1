import pytest
from pandas import DataFrame, Timestamp


@pytest.fixture
def transactions() -> DataFrame:
    return DataFrame(
        [
            {
                "Дата операции": Timestamp("2021-11-15 01:10:10"),
                "Дата платежа": "16.11.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -105.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -105.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "",
                "MCC": 4121.0,
                "Описание": "Яндекс Такси",
                "Бонусы (включая кэшбэк)": 2,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 105.0,
            },
            {
                "Дата операции": Timestamp("2021-11-14 16:23:04"),
                "Дата платежа": "15.11.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -152.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -152.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Такси",
                "MCC": 4121.0,
                "Описание": "Яндекс Такси",
                "Бонусы (включая кэшбэк)": 3,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 152.0,
            },
            {
                "Дата операции": Timestamp("2021-09-20 15:00:43"),
                "Дата платежа": "22.09.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -252.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -252.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Такси",
                "MCC": 4121.0,
                "Описание": "Яндекс Такси",
                "Бонусы (включая кэшбэк)": 5,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 252.0,
            },
        ]
    )


@pytest.fixture
def transactions_list() -> list[dict]:
    return [
        {
            "Дата операции": "2021-11-15 01:10:10",
            "Дата платежа": "16.11.2021",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -105.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -105.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "",
            "MCC": 4121.0,
            "Описание": "Яндекс Такси",
            "Бонусы (включая кэшбэк)": 2,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 105.0,
        },
        {
            "Дата операции": "2021-11-14 16:23:04",
            "Дата платежа": "15.11.2021",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -152.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -152.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Такси",
            "MCC": 4121.0,
            "Описание": "Яндекс Такси",
            "Бонусы (включая кэшбэк)": 3,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 152.0,
        },
        {
            "Дата операции": "2021-09-20 15:00:43",
            "Дата платежа": "22.09.2021",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -252.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -252.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Такси",
            "MCC": 4121.0,
            "Описание": "Яндекс Такси",
            "Бонусы (включая кэшбэк)": 5,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 252.0,
        },
    ]


@pytest.fixture
def fixture_cards() -> list[dict]:
    return [
        {"Сумма операции с округлением": 46207.08, "Номер карты": "*7197"},
        {"Сумма операции с округлением": 4144689.1699999976, "Номер карты": "*7197"},
    ]


@pytest.fixture
def setting_user() -> dict:
    return {"user_currencies": ["USD", "EUR"], "user_stocks": ["AAPL", "AMZN", "GOOGL", "MSFT", "TSLA"]}
